<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Mongo scraper!</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bulma/0.7.4/css/bulma.min.css">
  <script defer src="https://use.fontawesome.com/releases/v5.3.1/js/all.js"></script>
  <style>
    .hero-image {
      background-image: url("https://www.google.com/url?sa=i&source=images&cd=&cad=rja&uact=8&ved=2ahUKEwjdgsSstPzgAhUBiIMKHWztCZUQjRx6BAgBEAU&url=https%3A%2F%2Fwww.nps.gov%2Fzion%2Findex.htm&psig=AOvVaw0iPtzTN_1ulUU01CIJxUHa&ust=1552473429058532");
      background-position: center center;
      background-repeat: no-repeat;
      background-attachment: fixed;
      background-size: cover;
      background-color: #999;
      opacity: 1;
    }
    .centered {
      text-align: center;
    }
    .centered h1,
    .centered h2 {
      text-shadow: 2px 2px 4px black;
    }
    body {
      background: #00d1b2;
    }
  </style>
</head>

<body>
  <nav class="navbar is-primary" role="navigation" aria-label="main navigation">
    <div class="navbar-brand">
      <h1 class="navbar-item title is-3">Outdoor News You Can Use</h1>


      <a role="button" class="navbar-burger burger" aria-label="menu" aria-expanded="false"
        data-target="navbarBasicExample">
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
        <span aria-hidden="true"></span>
      </a>
    </div>

    <div id="navbarBasicExample" class="navbar-menu">
      <div class="navbar-start">
        <a class="navbar-item home">
          Home
        </a>

        <a class="navbar-item" id="save-page">
          Saved Articles
        </a>

      </div>
    </div>

    <div class="navbar-end">
      <div class="navbar-item">
        <div class="buttons">
          <a class="button is-primary" id="scrape">
            <strong>Scrape New Articles!</strong>
          </a>
          <a class="button is-light" id="delete">
            Clear Articles
          </a>
        </div>
      </div>
    </div>
    </div>
  </nav>

  {{{body}}}

  {{!-- Scripts --}}
  <script src="https://code.jquery.com/jquery-2.1.1.min.js"></script>
  <script src="/public/js/app.js" type="text/javascript"></script>

  <script type="text/javascript">
  console.log('client js')

// Get references to page elements
const $scrape = $("#scrape");
const $delete = $("#delete");
const $saveButton = $(".save-button");
const $home = $('.home');
const $removeButton = $('.remove-button');
const $savedPage = $('#save-page');

// The API object contains methods for each kind of request we'll make
let API = {
  saveArticle: function(article) {
    return $.ajax({
      headers: {
        "Content-Type": "application/json"
      },
      type: "POST",
      url: "api/beers",
      data: JSON.stringify(article)
    });
  },
    updateSave: function(id) {
    return $.ajax({
      url: "save/" + id,
      type: "PUT"
    });
  },
      updateRemove: function(id) {
    return $.ajax({
      url: "remove/" + id,
      type: "PUT"
    });
  },
  getArticles: function() {
    return $.ajax({
      url: "/",
      type: "GET"
    });
  },
    getSavedArticles: function() {
    return $.ajax({
      url: "/saved",
      type: "GET"
    });
  },
  scrapeArticles: function() {
    return $.ajax({
      url: "/scrape",
      type: "GET"
    });
  },
  deleteArticles: function() {
    return $.ajax({
      url: "/delete",
      type: "DELETE"
    });
  }
};
const handleScrape = event => {
  event.preventDefault();
  //scrape ajax call
  API.scrapeArticles();
  //gives db time to update before home page renders
  setTimeout(returnHome, 1000);
};
const handleDelete = event => {
  event.preventDefault();
  //scrape ajax call
  API.deleteArticles();
  //gives db time to update before home page renders
  setTimeout(returnHome, 1000);
};
const handleSave = event => {
  console.log($(this).data('id'))//this totally works!!
  let id = $(this).data('id');
  event.preventDefault();
  API.updateSave(id)
  setTimeout(returnHome, 500);
};
const handleRemove = event => {
  console.log($(this).data('id'))//this totally works!!
  let id = $(this).data('id');
  event.preventDefault();
  API.updateRemove(id)
  setTimeout(goToSaved, 500);
};
const goToSaved = () => {
  console.log('you clicked go to save')
  {{!-- API.getSavedArticles(); --}}
    window.location.href = "/saved";
}
//directs user back home automatically after submitting
const returnHome = () => {
  window.location.href = "/";
};
$scrape.on("click", handleScrape);
$delete.on("click", handleDelete);
$saveButton.on("click", handleSave);
$removeButton.on("click", handleRemove);
$home.on("click", returnHome);
$savedPage.on("click", goToSaved);
  </script>
  

</body>

</html>